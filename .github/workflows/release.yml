name: Release

on:
  push:
    branches:
      - feat/*
    tags:
      - "v*"

jobs:
  release:
    name: Build and Release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.0"

      - name: Install dependencies
        run: npm ci

      - name: Install Ruby dependencies
        run: bundle install

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Keychain
        env:
          KEYCHAIN_NAME: "build.keychain"
          KEYCHAIN_PASSWORD: ${{ github.run_id }}
        run: |
          KEYCHAIN_PATH="$RUNNER_TEMP/$KEYCHAIN_NAME-db"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security default-keychain -s "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -t 3600 -l "$KEYCHAIN_PATH"
          echo "GITHUB_KEYCHAIN_PATH=$KEYCHAIN_PATH" >> $GITHUB_ENV

      - name: Install Certificates
        env:
          DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE }}
          DISTRIBUTION_P12_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          DEVELOPMENT_CERTIFICATE_BASE64: ${{ secrets.DEVELOPMENT_CERTIFICATE_BASE64 }}
          DEVELOPMENT_KEY_BASE64: ${{ secrets.DEVELOPMENT_KEY_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ github.run_id }}
        run: |
          # Create certificate files
          echo $DISTRIBUTION_CERTIFICATE_BASE64 | base64 --decode > distribution_certificate.p12
          echo $DEVELOPMENT_CERTIFICATE_BASE64 | base64 --decode > development_certificate.cer
          echo $DEVELOPMENT_KEY_BASE64 | base64 --decode > development_key.pem

          # Import distribution certificate
          security import distribution_certificate.p12 -k "$GITHUB_KEYCHAIN_PATH" -P "$DISTRIBUTION_P12_PASSWORD" -T /usr/bin/codesign

          security find-identity -v -p codesigning

          # Import development certificate and key
          security import development_certificate.cer -T /usr/bin/codesign
          security import development_key.pem -T /usr/bin/codesign -A

          # Set keychain as default
          security list-keychains -s "$GITHUB_KEYCHAIN_PATH"
          security default-keychain -s "$GITHUB_KEYCHAIN_PATH"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" "$GITHUB_KEYCHAIN_PATH"

          # Clean up
          rm distribution_certificate.p12
          rm development_certificate.cer
          rm development_key.pem

      - name: Install CocoaPods
        run: |
          cd macos
          pod install

      - name: Build and Upload to TestFlight
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
          APPLE_API_KEY_CONTENT: ${{ secrets.APPLE_API_KEY_CONTENT }}
          GITHUB_KEYCHAIN_PATH: ${{ env.GITHUB_KEYCHAIN_PATH }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: bundle exec fastlane beta --verbose

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: GitBar-builds
          path: |
            macos/GitBar.pkg

      # - name: Generate Changelog
      #   id: changelog
      #   uses: requarks/changelog-action@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref_name }}

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     # body: ${{ steps.changelog.outputs.changes }}
      #     files: |
      #       macos/Export/GitBar.pkg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
