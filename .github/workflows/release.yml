name: Release

on:
  push:
    branches:
      - feat/*
    tags:
      - "v*"

jobs:
  release:
    name: Build and Release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.11.0"

      - name: Install dependencies
        run: npm ci

      - name: Install Ruby dependencies
        run: bundle install

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Certificates
        env:
          KEYCHAIN_PASSWORD: ${{ github.run_id }}
          DEVELOPMENT_CERTIFICATE_BASE64: ${{ secrets.DEVELOPMENT_CERTIFICATE }}
          DEVELOPMENT_P12_PASSWORD: ${{ secrets.DEVELOPMENT_CERTIFICATE_PWD }}
          DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.MACOS_CERTIFICATE }}
          DISTRIBUTION_P12_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          # create variables
          KEYCHAIN_PATH=$RUNNER_TEMP/signing.keychain-db
          DEV_CERT_PATH=$RUNNER_TEMP/development_certificate.p12
          DIST_CERT_PATH=$RUNNER_TEMP/distribution_certificate.p12

          # import certificates from secrets
          echo -n "$DEVELOPMENT_CERTIFICATE_BASE64" | base64 --decode -o $DEV_CERT_PATH
          echo -n "$DISTRIBUTION_CERTIFICATE_BASE64" | base64 --decode -o $DIST_CERT_PATH

          # create keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Add development certificate and key to keychain (Certificate must be imported before the key)
          security import $DEV_CERT_PATH -P "$DEVELOPMENT_P12_PASSWORD" -T /usr/bin/codesign -k $KEYCHAIN_PATH
          security find-identity -p codesigning -v $KEYCHAIN_PATH

          # Add distribution certificate to keychain
          security import $DIST_CERT_PATH -P "$DISTRIBUTION_P12_PASSWORD" -T /usr/bin/codesign -k $KEYCHAIN_PATH
          security find-identity -p codesigning -v $KEYCHAIN_PATH

          # Set keychain as default and update search list
          security list-keychains -d user -s $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH

          # Set partition list for keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Clean up certificate files
          rm $DEV_CERT_PATH $DIST_CERT_PATH

          # Export keychain path for later steps
          echo "GITHUB_KEYCHAIN_PATH=$KEYCHAIN_PATH" >> $GITHUB_ENV

      - name: Install CocoaPods
        run: |
          cd macos
          pod install

      - name: Build and Upload to TestFlight
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER_ID: ${{ secrets.APPLE_API_KEY_ISSUER_ID }}
          APPLE_API_KEY_CONTENT: ${{ secrets.APPLE_API_KEY_CONTENT }}
          GITHUB_KEYCHAIN_PATH: ${{ env.GITHUB_KEYCHAIN_PATH }}
        run: |
          # Show all items in the keychain
          security list-keychains
          security find-identity -v
          bundle exec fastlane beta --verbose

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: GitBar-builds
          path: |
            macos/GitBar.pkg

      # - name: Generate Changelog
      #   id: changelog
      #   uses: requarks/changelog-action@v1
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref_name }}

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     # body: ${{ steps.changelog.outputs.changes }}
      #     files: |
      #       macos/Export/GitBar.pkg
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
